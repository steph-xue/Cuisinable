import { useState } from "react";
import "./App.css";
import Landing from "./components/Landing";
import Selector from "./components/Selector";
import Meals from "./components/Meals";

function App() {

  // Set the initial state of the show start (landing) and getmeals pages to false
  const [start, setStart] = useState(false);
  const [getmeals, setGetmeals] = useState(false);

  // Set the initial state of the user chosen intolerances and cuisine to an empty array
  const [intolerances, setIntolerances] = useState([]);
  const [cuisine, setCuisine] = useState("");

  // Set the initial state of the recipes/meals generated by the API to an empty array
  const [recipes, setRecipes] = useState([]);

  // Function to show the start page and hide the getmeals page
  function getStarted() {
    setStart(true);
    setGetmeals(false);
  }

  // Function to show the getmeals page and hide the start page
  function getMeals() {
    setStart(false);
    setGetmeals(true);
  }

  // Function to save the user intolerances
  function saveUserIntolerances(event) {
    console.log(intolerances);
    if (event.target.checked) {
      setIntolerances([...intolerances, event.target.value]);
    } else {
      setIntolerances(intolerances.filter(item => item !== event.target.value));
    }
  }

  // Function to save the user cuisine
  function saveUserCuisine(event) {
    console.log(cuisine);
    if (event.target.checked) {
      setCuisine(event.target.value);
    }
    if (!event.target.checked) {
      setCuisine([]);
    }
  }

  // Function to fetch the meal selections based on the user intolerances and cuisine (retrieve from backend)
  function fetchMealSelections() {
    fetch(`/selections?cuisine=${cuisine}&intolerances=${intolerances}`)
    .then(response => response.json())
    .then(data => {
      setRecipes(data.results);
    });
  }

  // Render the App (landing page, selector page, and meals page)
  return (
    <div className="App">
      {/* Show the landing page */}
      {!start && !getmeals && <Landing getStarted={getStarted} />}

      {/* Show the selector page */}
      {start && <Selector getMeals={getMeals} saveUserIntolerances={saveUserIntolerances} saveUserCuisine={saveUserCuisine} fetchMealSelections={fetchMealSelections} />}

      {/* Show the meals page */}
      {getmeals && <Meals recipes={recipes} getStarted={getStarted} />}
    </div>
  );
}

export default App;